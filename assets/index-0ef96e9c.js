var K=Object.defineProperty;var Q=(a,e,t)=>e in a?K(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var r=(a,e,t)=>(Q(a,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const h of o.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&s(h)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}})();const d=class{constructor(e,t){r(this,"x");r(this,"y");this.x=e,this.y=t}add(e,t){return e instanceof d?(this.x+=e.x,this.y+=e.y):t?(this.x+=e,this.y+=t):(this.x+=e,this.y+=e),this}static add(e,t){return new d(e.x+t.x,e.y+t.y)}mult(e,t){return e instanceof d?(this.x*=e.x,this.y*=e.y):t?(this.x*=e,this.y*=t):(this.x*=e,this.y*=e),this}static mult(e,t){return t instanceof d?new d(e.x*t.x,e.y*t.y):new d(e.x*t,e.y*t)}sub(e,t){return e instanceof d?(this.x-=e.x,this.y-=e.y):t?(this.x-=e,this.y-=t):(this.x-=e,this.y-=e),this}static sub(e,t){return new d(e.x-t.x,e.y-t.y)}div(e,t){return e instanceof d?(this.x/=e.x,this.y/=e.y):t?(this.x/=e,this.y/=t):(this.x/=e,this.y/=e),this}static div(e,t){return new d(e.x/t.x,e.y/t.y)}set(e,t){return e instanceof d?(this.x=e.x,this.y=e.y):t?(this.x=e,this.y=t):(this.x=e,this.y=e),this}mag(){return Math.sqrt(this.x*this.x+this.y*this.y)}static mag(e){return Math.sqrt(e.x*e.x+e.y*e.y)}magSq(){return this.x*this.x+this.y*this.y}static magSq(e){return e.x*e.x+e.y*e.y}setMag(e){let t=this.mag();return this.x*=e/t,this.y*=e/t,this}normalize(){return this.setMag(1),this}limit(e){return this.mag()>e&&this.setMag(e),this}heading(){return Math.atan2(this.y,this.x)}rotate(e){let t=Math.cos(e),s=Math.sin(e),n=t*this.x-s*this.y,o=t*this.y+s*this.x;return this.x=n,this.y=o,this}rotateAboutAxis(e,t){return this.sub(t).rotate(e).add(t),this}dot(e){return e.x*this.x+e.y*this.y}static dot(e,t){return e.x*t.x+e.y*t.y}cross(e){return this.x*e.y-this.y*e.x}static cross(e,t){return e.x*t.y-e.y*t.x}dist(e){return Math.sqrt(Math.pow(this.x-e.x,2)+Math.pow(this.y-e.y,2))}static dist(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}lerp(e,t){let s=e.x-this.x,n=e.y-this.y;return this.x+=t*s,this.y+=t*n,this}static angleBetween(e,t){return Math.atan2(e.x*t.y-e.y*t.x,e.x*t.x+e.y*t.y)}copy(){return new d(this.x,this.y)}};let i=d;r(i,"zero",()=>new d(0,0)),r(i,"up",()=>new d(0,-1)),r(i,"down",()=>new d(0,1)),r(i,"left",()=>new d(-1,0)),r(i,"right",()=>new d(1,0));function j(a,e){return i.sub(a,e.copy().mult(2*i.dot(a,e)/e.magSq()))}function X(a,e,t,s){let n=Math.atan2(a.y,a.x)-Math.atan2(e.y,e.x);if(n>Math.PI&&(n=-(Math.PI*2-n)),n<-Math.PI&&(n=Math.PI*2+n),n>Math.PI/2||n<-Math.PI/2){let o=Math.PI-n,h=Math.asin(Math.sin(o)/t),c=o-h;return a.copy().rotate(c)}else{let o=n;if(o>s||o<-s)return j(a,e);let h=Math.asin(Math.sin(o)*t),c=o-h;return a.copy().rotate(-c)}}function G(a,e,t,s){let n=i.sub(e,a),o=i.sub(a,t),h=i.cross(s,n),c=i.cross(o,n)/h,l=i.cross(o,s)/h;return c>=0&&l>=0&&l<=1?i.add(t,s.mult(c)):null}function J(a,e,t,s=.1){let n=i.sub(a,t).mag(),o=i.sub(e,t).mag(),h=i.sub(e,a).mag();return Math.abs(n+o-h)<s}function Z(a,e,t){let s=i.sub(t,a),n=i.dot(s,e)/e.magSq();return i.add(a,e.mult(n))}class y{constructor(e,t){r(this,"start");r(this,"end");this.start=e,this.end=t}has(e){return!(e.x<this.start.x||e.x>this.end.x||e.y<this.start.y||e.y>this.end.y)}setMinSize(e){if(Math.abs(this.start.x-this.end.x)<e){let t=e-Math.abs(this.start.x-this.end.x);this.start.x-=t/2,this.end.x+=t/2}if(Math.abs(this.start.y-this.end.y)<e){let t=e-Math.abs(this.start.y-this.end.y);this.start.y-=t/2,this.end.y+=t/2}}render(e,t="#8424b9",s=1){e.strokeStyle=t,e.lineWidth=s,e.strokeRect(this.start.x,this.start.y,this.end.x-this.start.x,this.end.y-this.start.y)}static fromPoints(e){let t=e[0].copy(),s=e[0].copy();for(let n of e)n.x<t.x?t.x=n.x:n.x>s.x&&(s.x=n.x),n.y<t.y?t.y=n.y:n.y>s.y&&(s.y=n.y);return new y(t,s)}static fromAABBs(e){const t=[];for(let s of e)t.push(s.start,s.end);return y.fromPoints(t)}}class H{}class _ extends H{constructor(t,s,n,o){super();r(this,"center");r(this,"radius");r(this,"facing");r(this,"span");r(this,"canIntersectTwice",!0);this.center=t,this.radius=s,this.facing=n,this.span=o}intersects(t,s){let n=Z(t.copy(),s.copy(),this.center),o=i.sub(n,this.center).magSq();if(o>this.radius*this.radius)return null;let h=Math.sqrt(this.radius*this.radius-o);if(i.sub(t,n).magSq()>h*h){let l=i.sub(n,s.copy().normalize().mult(h));if(!(Math.abs(i.angleBetween(i.sub(l,t),s))>.2)){let p=i.sub(l,this.center);if(Math.abs(i.angleBetween(p,this.facing))<=this.span/2&&t.dist(l)>.01)return l}}let c=i.add(n,s.copy().normalize().mult(h));if(!(Math.abs(i.angleBetween(i.sub(c,t),s))>.2)){let l=i.sub(c,this.center);if(Math.abs(i.angleBetween(l,this.facing))<=this.span/2&&t.dist(c)>.01)return c}return null}translate(t){this.center.add(t)}rotateAboutAxis(t,s){this.center.rotateAboutAxis(t,s),this.facing.rotate(t)}calculateAABB(){const t=[i.up(),i.down(),i.left(),i.right()],s=[];for(const n of t)Math.abs(i.angleBetween(n,this.facing))<this.span/2&&s.push(i.add(this.center,i.mult(n,this.radius)));return s.push(i.add(this.center,i.mult(this.facing.copy().rotate(this.span/2),this.radius))),s.push(i.add(this.center,i.mult(this.facing.copy().rotate(-this.span/2),this.radius))),y.fromPoints(s)}render(t,s="#ffffff"){let n=this.facing.heading()-this.span/2,o=this.facing.heading()+this.span/2;t.beginPath(),t.strokeStyle=s,t.lineWidth=2,t.arc(this.center.x,this.center.y,this.radius,n,o),t.stroke()}}class B extends _{constructor(t,s,n,o,h,c=1){super(t,s,n,o);r(this,"refractiveIndex");r(this,"criticalAngle");r(this,"normal");this.refractiveIndex=h,this.criticalAngle=Math.asin(1/this.refractiveIndex),this.normal=c}handle(t,s){let n=i.sub(t,this.center).normalize().mult(this.normal);return X(s,n,this.refractiveIndex,this.criticalAngle)}}class tt extends H{constructor(t,s){super();r(this,"v1");r(this,"v2");r(this,"normal",new i(0,0));r(this,"canIntersectTwice",!1);this.v1=t,this.v2=s,this.calculateNormal()}calculateNormal(){this.normal=i.sub(this.v2,this.v1).rotate(Math.PI/2).normalize()}setVertices(t,s){this.v1=t.copy(),this.v2=s.copy(),this.calculateNormal()}translate(t){this.v1.add(t),this.v2.add(t),this.calculateNormal()}rotateAboutAxis(t,s){this.v1.rotateAboutAxis(t,s),this.v2.rotateAboutAxis(t,s),this.calculateNormal()}intersects(t,s){return G(this.v1.copy(),this.v2.copy(),t.copy(),s.copy())}intersectsPoint(t,s=.1){return J(this.v1.copy(),this.v2.copy(),t.copy(),s)}calculateAABB(){return y.fromPoints([this.v1,this.v2])}render(t,s="#ffffff"){t.strokeStyle=s,t.lineWidth=2,t.beginPath(),t.moveTo(this.v1.x,this.v1.y),t.lineTo(this.v2.x,this.v2.y),t.stroke()}}class v extends tt{constructor(t,s,n){super(t,s);r(this,"refractiveIndex");r(this,"criticalAngle");this.refractiveIndex=n,this.criticalAngle=Math.asin(1/this.refractiveIndex)}handle(t,s){return X(s,this.normal,this.refractiveIndex,this.criticalAngle)}}var u=(a=>(a.Number="number",a.String="text",a.Boolean="checkbox",a.Color="color",a.Vector="vector",a))(u||{});class R{constructor(e,t){r(this,"pos");r(this,"rot");r(this,"bounds");r(this,"name");r(this,"color","#ffffff");r(this,"displayBounds",!1);r(this,"attributes");r(this,"surfaces",[]);r(this,"lightRays",[]);this.pos=e,this.rot=0,this.name=t,this.bounds=new y(i.zero(),i.zero()),this.attributes=[{name:"color",type:u.Color},{name:"displayBounds",type:u.Boolean},{name:"pos",type:u.Vector},{name:"rot",type:u.Number}]}setPosition(e){const t=i.sub(e,this.pos);this.pos=e,this.updateTransforms(t,0),this.updateBounds()}setRotation(e){const t=e-this.rot;this.rot=e,this.updateTransforms(i.zero(),t),this.updateBounds()}translate(e){this.pos.add(e),this.updateTransforms(e,0),this.updateBounds()}rotate(e){this.rot+=e,this.updateTransforms(i.zero(),e),this.updateBounds()}updateTransforms(e,t){}updateBounds(){}updateAttribute(e,t){switch(console.log("updating attribute",e,t),e){case"pos":this.setPosition(t);break;case"rot":this.setRotation(t);break;case"color":this.color=t;break;case"displayBounds":this.displayBounds=t;break}}render(e,t){this.displayBounds&&this.bounds.render(e),t&&this.bounds.render(e,"#8424b9",2)}}r(R,"entityData");class k extends R{constructor(e,t){super(e,t)}updateTransforms(e,t){for(let s of this.surfaces)s.translate(e),s.rotateAboutAxis(t,this.pos.copy())}updateBounds(){let e=[];for(let t of this.surfaces){const s=t.calculateAABB();e.push(s)}this.bounds=y.fromAABBs(e)}render(e,t){for(let s of this.surfaces)s.render(e,this.color);super.render(e,t)}}const L=class extends k{constructor(t){super(t,"Concave Lens");r(this,"span");r(this,"radiusOfCurvature");r(this,"thickness");r(this,"refractiveIndex");this.span=.4,this.radiusOfCurvature=500,this.thickness=4,this.refractiveIndex=1.666,this.init(),this.attributes.push({name:"span",type:u.Number,min:0,max:1e3}),this.attributes.push({name:"radiusOfCurvature",type:u.Number,min:0,max:1e3}),this.attributes.push({name:"thickness",type:u.Number,min:0,max:1e3}),this.attributes.push({name:"refractiveIndex",type:u.Number,min:.1,max:10})}init(){let t=this.radiusOfCurvature+this.thickness/2,s=this.radiusOfCurvature*Math.sin(this.span/2),n=this.radiusOfCurvature-Math.cos(this.span/2)*this.radiusOfCurvature+this.thickness/2;this.surfaces=[new B(new i(this.pos.x-t,this.pos.y),this.radiusOfCurvature,i.right(),this.span,this.refractiveIndex,-1),new B(new i(this.pos.x+t,this.pos.y),this.radiusOfCurvature,i.left(),this.span,this.refractiveIndex,-1),new v(new i(this.pos.x-n,this.pos.y+s),new i(this.pos.x+n,this.pos.y+s),this.refractiveIndex),new v(new i(this.pos.x+n,this.pos.y-s),new i(this.pos.x-n,this.pos.y-s),this.refractiveIndex)],this.updateBounds()}updateAttribute(t,s){switch(super.updateAttribute(t,s),t){case"span":this.span=s,this.init();break;case"radiusOfCurvature":this.radiusOfCurvature=s,this.init();break;case"thickness":this.thickness=s,this.init();break;case"refractiveIndex":this.refractiveIndex=s,this.surfaces.forEach(n=>{n.refractiveIndex=this.refractiveIndex});break}}};let w=L;r(w,"entityData",{name:"Concave Lens",desc:"A concave lens.",constructorFunc:L});const q=class extends k{constructor(t){super(t,"Convex Lens");r(this,"span");r(this,"radiusOfCurvature");r(this,"refractiveIndex");this.span=1,this.radiusOfCurvature=200,this.refractiveIndex=1.666,this.init(),this.attributes.push({name:"span",type:u.Number,min:0,max:1e3}),this.attributes.push({name:"radiusOfCurvature",type:u.Number,min:0,max:1e3}),this.attributes.push({name:"refractiveIndex",type:u.Number,min:.1,max:10})}init(){let t=this.radiusOfCurvature*Math.sin(this.span/2),s=Math.sqrt(this.radiusOfCurvature**2-t**2);this.surfaces=[new B(new i(this.pos.x-s,this.pos.y),this.radiusOfCurvature,i.right(),this.span,this.refractiveIndex),new B(new i(this.pos.x+s,this.pos.y),this.radiusOfCurvature,i.left(),this.span,this.refractiveIndex)],this.updateBounds()}updateAttribute(t,s){switch(super.updateAttribute(t,s),t){case"span":this.span=s,this.init();break;case"radiusOfCurvature":this.radiusOfCurvature=s,this.init();break;case"refractiveIndex":this.refractiveIndex=s,this.surfaces.forEach(n=>{n.refractiveIndex=this.refractiveIndex});break}}};let I=q;r(I,"entityData",{name:"Convex Lens",desc:"A convex lens.",constructorFunc:q});const F=class extends k{constructor(t){super(t,"Glass Sphere");r(this,"radius");r(this,"refractiveIndex");this.radius=100,this.refractiveIndex=1.666,this.init(),this.attributes.push({name:"radius",type:u.Number,min:0,max:1e3}),this.attributes.push({name:"refractiveIndex",type:u.Number,min:.1,max:10})}init(){this.surfaces=[new B(this.pos.copy(),this.radius,i.right(),Math.PI*2,this.refractiveIndex)],this.updateBounds()}updateAttribute(t,s){switch(t){case"radius":this.radius=s,this.init();break;case"refractiveIndex":this.refractiveIndex=s,this.surfaces[0].refractiveIndex=this.refractiveIndex;break}}};let M=F;r(M,"entityData",{name:"Glass Sphere",desc:"A glass sphere.",constructorFunc:F});class T{constructor(e,t){r(this,"origin");r(this,"dir");r(this,"path");this.origin=e,this.dir=t.copy(),this.path=[this.origin]}trace(e){this.path=[this.origin];let t=this.path[0],s=this.dir.copy(),n=null;for(let o=0;o<50;o++){let h=null,c=null,l=1/0;for(let p=0;p<e.length;p++){if(p===n&&!e[p].canIntersectTwice)continue;let m=e[p].intersects(t.copy(),s.copy());if(!m)continue;let b=i.sub(m,t).magSq();b<l&&(h=m,l=b,c=p)}if(h&&c!==null)this.path.push(h),t=h,s=e[c].handle(h.copy(),s.copy()).copy(),n=c;else break}this.path.push(t.copy().add(s.mult(3e3)))}render(e){e.moveTo(this.origin.x,this.origin.y);for(let t of this.path)e.lineTo(t.x,t.y)}}const W=class extends R{constructor(t){super(t,"Point Light");r(this,"numRays");this.numRays=1e3,this.init(),this.attributes.push({name:"numRays",type:u.Number,min:0,max:1e4})}init(){this.lightRays=[];for(let t=0;t<this.numRays;t++)this.lightRays.push(new T(this.pos,new i(1,0).rotate(Math.PI*2/this.numRays*t)));this.updateBounds()}updateTransforms(t,s){for(let n of this.lightRays)n.origin=this.pos}updateBounds(){this.bounds=y.fromPoints([this.pos.copy(),this.pos.copy()]),this.bounds.setMinSize(50)}updateAttribute(t,s){switch(super.updateAttribute(t,s),t){case"numRays":this.numRays=s,this.init();break}}};let A=W;r(A,"entityData",{name:"Point Light",desc:"A point light.",constructorFunc:W});const z=[new i(0,-Math.sqrt(3)/3),new i(.5,Math.sqrt(3)/6),new i(-.5,Math.sqrt(3)/6)],V=class extends k{constructor(t){super(t,"Prism");r(this,"size");r(this,"refractiveIndex");this.size=200,this.refractiveIndex=1.5,this.init(),this.attributes.push({name:"size",type:u.Number,min:0,max:1e3}),this.attributes.push({name:"refractiveIndex",type:u.Number,min:.1,max:10})}init(){let t=i.add(this.pos,z[0].copy().mult(this.size).rotate(this.rot)),s=i.add(this.pos,z[1].copy().mult(this.size).rotate(this.rot)),n=i.add(this.pos,z[2].copy().mult(this.size).rotate(this.rot));this.surfaces=[new v(s.copy(),t.copy(),this.refractiveIndex),new v(n.copy(),s.copy(),this.refractiveIndex),new v(t.copy(),n.copy(),this.refractiveIndex)],this.updateBounds()}updateAttribute(t,s){switch(super.updateAttribute(t,s),t){case"size":this.size=s,this.init();break;case"refractiveIndex":this.refractiveIndex=s;for(const n of this.surfaces)n.refractiveIndex=this.refractiveIndex;break}}};let E=V;r(E,"entityData",{name:"Prism",desc:"A prism.",constructorFunc:V});const Y=class extends R{constructor(t){super(t,"Light Beam");r(this,"size");r(this,"numRays");this.size=150,this.numRays=100,this.init(),this.attributes.push({name:"size",type:u.Number,min:0,max:1e4}),this.attributes.push({name:"numRays",type:u.Number,min:0,max:1e4})}init(){this.lightRays=[];for(let t=-this.size/2;t<=this.size/2;t+=this.size/this.numRays)this.lightRays.push(new T(i.add(this.pos,new i(0,t).rotate(this.rot)),i.right().rotate(this.rot)));this.updateBounds()}updateTransforms(t,s){for(let n of this.lightRays)n.origin.add(t),n.origin.rotateAboutAxis(s,this.pos),n.dir=i.right().rotate(this.rot)}updateBounds(){const t=this.lightRays[0].origin.copy(),s=this.lightRays[this.lightRays.length-1].origin.copy();this.bounds=y.fromPoints([t,s]),this.bounds.setMinSize(20)}updateAttribute(t,s){switch(super.updateAttribute(t,s),t){case"size":this.size=s,this.init();break;case"numRays":this.numRays=s,this.init();break}}};let C=Y;r(C,"entityData",{name:"Light Beam",desc:"A light beam.",constructorFunc:Y});const U=class extends R{constructor(e){super(e,"Light Beam"),this.init()}init(){this.lightRays=[new T(i.add(this.pos,new i(0,1).rotate(this.rot)),i.right().rotate(this.rot))],console.log(this.lightRays[0]),this.updateBounds()}updateTransforms(e,t){for(let s of this.lightRays)s.origin.add(e),s.origin.rotateAboutAxis(t,this.pos),s.dir=i.right().rotate(this.rot)}updateBounds(){const e=this.lightRays[0].origin.copy(),t=this.lightRays[this.lightRays.length-1].origin.copy();this.bounds=y.fromPoints([e,t]),this.bounds.setMinSize(20)}updateAttribute(e,t){super.updateAttribute(e,t)}};let O=U;r(O,"entityData",{name:"Light Ray",desc:"A light ray.",constructorFunc:U});const et=[w.entityData,I.entityData,M.entityData,C.entityData,O.entityData,A.entityData,E.entityData];class st{constructor(e){r(this,"entityAddDiv");r(this,"entityAttributesDiv");r(this,"selectedEntity",null);r(this,"world");this.world=e,this.entityAddDiv=document.getElementById("entity-creation"),this.entityAttributesDiv=document.getElementById("entity-attributes");for(const t of et){const s=document.createElement("button");s.innerText=t.name,s.addEventListener("click",()=>{e.addEntity(new t.constructorFunc(new i(0,0)))}),this.entityAddDiv.appendChild(s)}}selectEntity(e){console.log("Yes"),console.trace(),this.selectedEntity=e,this.entityAttributesDiv.innerHTML=e.name+"<br/>",this.createEntityAttributesDOM(e)}deselectEntity(){this.selectedEntity=null,this.entityAttributesDiv.innerHTML=""}createEntityAttributesDOM(e){const t=document.createElement("button");t.innerText="Delete",t.addEventListener("click",()=>{this.world.removeEntity(this.selectedEntity),this.deselectEntity()}),this.entityAttributesDiv.appendChild(t),console.log(e.attributes);for(const s of e.attributes){const n=this.createAttributeDOM(e,s);this.entityAttributesDiv.appendChild(n)}}createAttributeDOM(e,t){console.log(this.selectEntity);const s=document.createElement("div");s.className="attribute";const n=document.createElement("label");switch(n.innerText=t.name,s.appendChild(n),t.type){case u.Vector:const o=e[t.name];console.log(t.name);let h;h=document.createElement("input"),h.type="number",h.value=o.x.toString();const c=document.createElement("div");c.className="input-container vector-x",c.appendChild(h);let l;l=document.createElement("input"),l.type="number",l.value=o.y.toString();const p=document.createElement("div");p.className="input-container vector-y",p.appendChild(l),s.appendChild(c),s.appendChild(p),h.addEventListener("input",g=>{const D=new i(parseFloat(g.target.value),parseFloat(l.value));e.updateAttribute(t.name,D)}),l.addEventListener("input",g=>{const D=new i(parseFloat(g.target.value),parseFloat(l.value));e.updateAttribute(t.name,D)});break;case u.Boolean:const m=document.createElement("input");m.type="checkbox",m.checked=e[t.name];const b=document.createElement("div");b.className="input-container",b.appendChild(m),s.appendChild(b),m.addEventListener("input",g=>{e.updateAttribute(t.name,g.target.checked)});break;default:const P=document.createElement("input");P.type=t.type,P.value=e[t.name].toString();const S=document.createElement("div");S.className="input-container",S.appendChild(P),s.appendChild(S),P.addEventListener("input",g=>{e.updateAttribute(t.name,g.target.value)});break}return s}}class it{constructor(){r(this,"surfaces",[]);r(this,"lightRays",[]);r(this,"entities",[]);r(this,"worldOffset",i.zero());r(this,"worldScale",1);r(this,"selectedEntityIndex",-1);r(this,"isMouseDown",!1);r(this,"lastMousePos",i.zero());r(this,"isSelectedEntityBeingDragged",!1);r(this,"ui",new st(this))}addEntity(e){this.entities.push(e)}removeEntity(e){const t=this.entities.indexOf(e);t>-1&&this.entities.splice(t,1),this.selectedEntityIndex=-1}update(){this.surfaces=this.entities.map(e=>e.surfaces).flat(),this.lightRays=this.entities.map(e=>e.lightRays).flat();for(let e of this.lightRays)e.trace(this.surfaces)}handleMouseDown(e){const t=i.sub(e,this.worldOffset).div(this.worldScale);this.selectedEntityIndex=-1;for(let s=0;s<this.entities.length;s++)if(this.entities[s].bounds.has(t)){console.log("Selected entity:",this.entities[s]),this.selectedEntityIndex=s,this.isSelectedEntityBeingDragged=!0,this.ui.selectEntity(this.entities[s]);break}this.isMouseDown=!0}handleMouseMove(e){const t=i.sub(e,this.lastMousePos),s=t.copy().div(this.worldScale);if(this.lastMousePos=e,this.isMouseDown){if(this.isSelectedEntityBeingDragged){this.entities[this.selectedEntityIndex].translate(s);return}if(this.selectedEntityIndex===-1){this.worldOffset.add(t);return}}const n=i.sub(e,this.worldOffset).div(this.worldScale);for(let o of this.entities){if(o.bounds.has(n)){o.displayBounds=!0;continue}o.displayBounds=!1}}handleMouseUp(e){this.isMouseDown=!1,this.isSelectedEntityBeingDragged=!1}handleMouseWheel(e){this.worldScale+=e/1e3}render(e){e.save(),e.translate(this.worldOffset.x,this.worldOffset.y),e.scale(this.worldScale,this.worldScale),e.beginPath();for(let s of this.lightRays)s.render(e);const t=150;e.strokeStyle=`rgba(${t}, ${t}, ${t}, 1)`,e.lineWidth=.2,e.globalCompositeOperation="lighter",e.lineCap="butt",e.stroke(),e.closePath();for(let s=0;s<this.entities.length;s++)this.entities[s].render(e,this.selectedEntityIndex==s);e.restore()}}const x=document.getElementById("display"),N=x.getContext("2d");x.width=window.innerWidth;x.height=window.innerHeight;const f=new it,nt=new E(new i(200,150));f.addEntity(nt);const rt=new A(new i(700,400));f.addEntity(rt);let at=new I(new i(800,300));f.addEntity(at);let ot=new w(new i(500,300));f.addEntity(ot);let ht=new M(new i(200,500));f.addEntity(ht);x.addEventListener("mousedown",a=>{f.handleMouseDown(new i(a.clientX,a.clientY))});x.addEventListener("mousemove",a=>{f.handleMouseMove(new i(a.clientX,a.clientY))});x.addEventListener("mouseup",a=>{f.handleMouseUp(new i(a.clientX,a.clientY))});x.addEventListener("wheel",a=>{f.handleMouseWheel(-a.deltaY)});function $(){requestAnimationFrame($),N.fillStyle="black",N.fillRect(0,0,x.width,x.height),f.update(),f.render(N)}$();
